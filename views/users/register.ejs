<% include('../layouts/header.ejs') %>

  <head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  </head>

  <body>
    <div class="wrapper">
      <form method="post" action="/register" id="registerForm">
        <h1>Register</h1>

        <div class="input-box">
          <input id="username" type="text" placeholder="Enter username" name="username" />
          <i class="bx bxs-user"></i>
        </div>

        <div class="input-box">
          <input id="email" type="email" placeholder="Enter Email" name="email" />
          <i class="bx bxs-user"></i>
        </div>

        <div class="input-box">
          <input id="password" type="password" placeholder="Password" name="password" />
          <i class="bx bxs-lock-alt"></i>
          <button type="button" class="toggle-password">üëÅÔ∏è</button>
        </div>

        <button type="submit" class="btn">Sign in</button>
      </form>
    </div>

    <style>
      /* Same CSS styles as before */
    </style>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const togglePassword = document.querySelector(".toggle-password");
        const passwordInput = document.querySelector("#password");
        const registerForm = document.querySelector("#registerForm");

        togglePassword.addEventListener("click", function () {
          const type = passwordInput.getAttribute("type") === "password" ? "text" : "password";
          passwordInput.setAttribute("type", type);
          this.textContent = type === "password" ? "üëÅÔ∏è" : "üîí";
        });

        registerForm.addEventListener("submit", function (e) {
          const username = document.querySelector("#username").value.trim();
          const email = document.querySelector("#email").value.trim();
          const password = document.querySelector("#password").value;

          
          // Username validation
          const usernamePattern = /^[A-Za-z]+$/; 
          if (!usernamePattern.test(username)) {
            e.preventDefault();
            Swal.fire({
              icon: 'error',
              title: 'Oops...',
              text: 'Username should contain only alphabets without any numbers or symbols.'
            });
            return;
          }


          // Email validation
          const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!emailPattern.test(email)) {
            e.preventDefault();
            Swal.fire({
              icon: 'error',
              title: 'Invalid email',
              text: 'Please enter a valid email address.'
            });
            return;
          }

          // Password validation
          if (password.length < 4) {
            e.preventDefault();
            Swal.fire({
              icon: 'error',
              title: 'Weak password',
              text: 'Password must be at least 8 characters long.'
            });
          }
        });
      });
    </script>
  </body>

  <style>
    @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Poppins', sans-serif;
    }

    body {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background: url('https://i.postimg.cc/rmWWDgCp/background.jpg') no-repeat;
      background-size: cover;
      background-position: center;
    }

    .wrapper {
      width: 420px;
      background: transparent;
      border: 2px solid rgba(255, 255, 255, .2);
      backdrop-filter: blur(20px);
      box-shadow: 0 0 10px rgba(255, 255, 255, .2);
      color: #fff;
      padding: 30px 40px;
    }

    .wrapper h1 {
      font-size: 36px;
      text-align: center;
    }

    .wrapper .input-box {
      position: relative;
      width: 100%;
      height: 50px;
      margin: 30px 0;
    }

    .input-box input {
      width: 100%;
      height: 100%;
      background: transparent;
      font-size: 16px;
      color: #fff;
      padding: 20px 40px 20px 20px;
      border: none;
      outline: none;
      border: 2px solid rgba(255, 255, 255, .2);
      border-radius: 40px;
    }

    .input-box input::placeholder {
      color: #fff;
    }

    .input-box i {
      position: absolute;
      right: 20px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 20px;
    }

    .wrapper .remember-forget {
      display: flex;
      justify-content: space-between;
      font-size: 14.5px;
      margin: 20px 0 15px;
    }

    .remember-forget label input {
      accent-color: #fff;
      margin-right: 10px;
    }

    .remember-forget a {
      color: #fff;
      text-decoration: none;
    }

    .remember-forget a:hover {
      text-decoration: underline;
    }

    .wrapper .btn {
      width: 100%;
      height: 45px;
      background: #fff;
      border: none;
      outline: none;
      border-radius: 40px;
      box-shadow: 0 0 10px rgba(0, 0, 0, .1);
      cursor: pointer;
      color: #333;
      font-weight: 600;
      transition: .5s;
    }

    .wrapper .btn:hover {
      background: rgba(255, 255, 255, .2);
      color: #fff;
      border-color: #fff;
    }

    .wrapper .register-link {
      font-size: 14.5px;
      text-align: center;
      margin: 20px 0 15px;
    }

    .register-link p a {
      color: #3abfce;
      text-decoration: none;
      font-weight: 600;
      font-size: 18px;
    }

    .register-link p a:hover {
      text-decoration: underline;
    }

    .toggle-password {
      background: none;
      border: none;
      cursor: pointer;
      position: absolute;
      right: 10px;
      top: 50%;
      transform: translateY(-50%);
      font-size: 16px;
      color: #333;
    }

    .input-box {
      position: relative;
    }
  </style>

  <% include('../layouts/footer.ejs') %>